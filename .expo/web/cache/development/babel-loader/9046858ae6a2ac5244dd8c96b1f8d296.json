{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Toppr\\\\Python Basics\\\\class-57-reference-main\\\\components\\\\Media.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport BasicButton from \"./BasicButton\";\nexport default function Media() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploadUrl = _useState4[0],\n      setUploadUrl = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isUploading = _useState6[0],\n      setIsUploading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      percentUploaded = _useState8[0],\n      setPercentUploaded = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      quizName = _useState10[0],\n      setQuizName = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      quizType = _useState12[0],\n      setQuizType = _useState12[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  function handlePickImgBtnClick() {\n    var result;\n    return _regeneratorRuntime.async(function handlePickImgBtnClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Media Management\"), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Quiz Name\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    placeholder: \"Enter your name\",\n    value: quizName,\n    onChangeText: function onChangeText(name) {\n      return setQuizName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Quiz Type\"), React.createElement(Picker, {\n    style: styles.inputField,\n    selectedValue: quizType,\n    onValueChange: function onValueChange(quizType, itemIndex) {\n      return setQuizType(quizType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Maths Quiz\",\n    value: \"Maths Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Science Quiz\",\n    value: \"Science Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Sports Quiz\",\n    value: \"Sports Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"English  Quiz\",\n    value: \"English Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Hindi Quiz\",\n    value: \"Hindi Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Technology Quiz\",\n    value: \"Technology Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Arts Quiz\",\n    value: \"Arts Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(BasicButton, {\n    text: \"Pick Image\",\n    onPress: handlePickImgBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), image ? React.createElement(React.Fragment, null, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    marginTop: 60,\n    paddingHorizontal: 30\n  },\n  title: {\n    fontWeight: '500',\n    fontSize: 30,\n    letterSpacing: 0.1,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 16,\n    lineHeight: 18,\n    color: '#666666',\n    marginBottom: 3\n  },\n  inputField: {\n    fontSize: 14,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: '#BFBFBF',\n    paddingVertical: 6\n  },\n  divider: {\n    paddingVertical: 8\n  },\n  image: {\n    alignSelf: \"center\",\n    width: \"100%\",\n    height: 200\n  },\n  percent: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Toppr/Python Basics/class-57-reference-main/components/Media.js"],"names":["React","useState","useEffect","Picker","ImagePicker","BasicButton","Media","image","setImage","uploadUrl","setUploadUrl","isUploading","setIsUploading","percentUploaded","setPercentUploaded","quizName","setQuizName","quizType","setQuizType","Platform","OS","requestCameraRollPermissionsAsync","status","alert","handlePickImgBtnClick","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","cancelled","uri","styles","container","title","divider","label","inputField","name","itemIndex","StyleSheet","create","backgroundColor","marginTop","paddingHorizontal","fontWeight","fontSize","letterSpacing","textAlign","lineHeight","color","marginBottom","borderWidth","borderBottomWidth","borderBottomColor","paddingVertical","alignSelf","width","height","percent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Platform, ScrollView, Image, TextInput, ActivityIndicator, Alert } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport BasicButton from \"./BasicButton\";\n\nexport default function Media() {\n    const [image, setImage] = useState(null);\n    const [uploadUrl, setUploadUrl] = useState(\"\");\n    const [isUploading, setIsUploading] = useState(false);\n    const [percentUploaded, setPercentUploaded] = useState(\"\");\n    const [quizName, setQuizName] = useState(\"\");\n    const [quizType, setQuizType] = useState(\"\");\n\n    //component did mount\n    useEffect(() => {\n        //asking for permission to access phone's gallery\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n    }, []);\n\n    //function to handle when Pick Image btn is clicked on\n    async function handlePickImgBtnClick() {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            quality: 1,\n        });\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n    }\n\n    //component rendering\n    return (\n        <ScrollView style={styles.container}>\n            <Text style={styles.title}>Media Management</Text>\n            <View style={styles.divider}></View>\n\n            <Text style={styles.label}>Quiz Name</Text>\n            <TextInput\n                style={styles.inputField}\n                placeholder=\"Enter your name\"\n                value={quizName}\n                onChangeText={(name) => setQuizName(name)}\n            />\n            <View style={styles.divider}></View>\n\n            <Text style={styles.label}>Quiz Type</Text>\n            <Picker\n                style={styles.inputField}\n                selectedValue={quizType}\n                onValueChange={(quizType, itemIndex) => setQuizType(quizType)}\n            >\n                <Picker.Item label=\"\" value=\"\" />\n                <Picker.Item label=\"Maths Quiz\" value=\"Maths Quiz\" />\n                <Picker.Item label=\"Science Quiz\" value=\"Science Quiz\" />\n                <Picker.Item label=\"Sports Quiz\" value=\"Sports Quiz\" />\n                <Picker.Item label=\"English  Quiz\" value=\"English Quiz\" />\n                <Picker.Item label=\"Hindi Quiz\" value=\"Hindi Quiz\" />\n                <Picker.Item label=\"Technology Quiz\" value=\"Technology Quiz\" />\n                <Picker.Item label=\"Arts Quiz\" value=\"Arts Quiz\" />\n            </Picker>\n            <View style={styles.divider}></View>\n\n            <BasicButton\n                text=\"Pick Image\"\n                onPress={handlePickImgBtnClick}\n            />\n            <View style={styles.divider}></View>\n\n           \n            {\n                image ?\n                    <>\n                        <Image source={{ uri: image }} style={styles.image} />\n                        <View style={styles.divider}></View>\n                    </>\n\n                    : null\n            }\n\n            \n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n        marginTop: 60,\n        paddingHorizontal: 30,\n    },\n\n    title: {\n        fontWeight: '500',\n        fontSize: 30,\n        letterSpacing: 0.1,\n        textAlign: \"center\",\n    },\n\n    label: {\n        fontSize: 16,\n        lineHeight: 18,\n        color: '#666666',\n        marginBottom: 3,\n    },\n\n    inputField: {\n        fontSize: 14,\n        borderWidth: 0,\n        borderBottomWidth: 1,\n        borderBottomColor: '#BFBFBF',\n        paddingVertical: 6,\n    },\n\n    divider: {\n        paddingVertical: 8,\n    },\n\n    image: {\n        alignSelf: \"center\",\n        width: \"100%\",\n        height: 200,\n    },\n\n    percent: {\n        textAlign: \"center\",\n    }\n});\n"]},"metadata":{},"sourceType":"module"}